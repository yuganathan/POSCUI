<Activity mc:Ignorable="sap sap2010" x:Class="AdjustTotalsMsg" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:t="clr-namespace:TestReportGenerator;assembly=TestReportGenerator" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="ScenarioName" Type="InArgument(x:String)" />
    <x:Property Name="TotalAdjusted" Type="InArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1068,860.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>AdjustTotalsMsg_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="21">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="24">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="AdjustTotalsMsg" sap:VirtualizedContainerService.HintSize="475.2,696" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="PreviousSale" />
      <Variable x:TypeArguments="ui:UiElement" Name="foundElt" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <t:StartTest DisplayName="Start test" sap:VirtualizedContainerService.HintSize="433.6,22.4" sap2010:WorkflowViewState.IdRef="StartTest_1" ScenarioName="[ScenarioName]" Status="STARTED" TestCase="Verify that Return Reason screen is displayed." />
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="433.6,478.4" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window" sap:VirtualizedContainerService.HintSize="798.4,1306.4" sap2010:WorkflowViewState.IdRef="WindowScope_1" Selector="&lt;wnd app='vncviewer.exe' cls='vwr::CDesktopWin' omit:title='10.89.160.21 (sterling@reg1) - VNC Viewer' /&gt;">
          <ui:WindowScope.Body>
            <ActivityAction x:TypeArguments="x:Object">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="764.8,1197.6" sap2010:WorkflowViewState.IdRef="Sequence_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence sap:VirtualizedContainerService.HintSize="723.2,604.8" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="375.2,512" sap2010:WorkflowViewState.IdRef="Sequence_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:WaitImageAppear DisplayName="Find previous sale" FoundElement="[foundElt]" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="WaitImageAppear_1">
                      <ui:WaitImageAppear.Image>
                        <ui:ImageTarget Image="{x:Null}" Accuracy="0.8" Profile="Basic" TargetImageBase64="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" />
                      </ui:WaitImageAppear.Image>
                      <ui:WaitImageAppear.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="14d95360-e844-4a48-8fca-36b63bb8d2ae" Selector="&lt;ctrl omit:name='10.89.160.21 (sterling@reg1) - VNC Viewer' role='client' /&gt;">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:WaitImageAppear.Target>
                    </ui:WaitImageAppear>
                    <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get previous sale" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_1">
                      <ui:GetOCRText.OCREngine>
                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                          <ActivityFunc.Argument>
                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                          </ActivityFunc.Argument>
                          <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_1" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="3">
                            <ui:GoogleOCR.AllowedCharacters>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:GoogleOCR.AllowedCharacters>
                            <ui:GoogleOCR.DeniedCharacters>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:GoogleOCR.DeniedCharacters>
                          </ui:GoogleOCR>
                        </ActivityFunc>
                      </ui:GetOCRText.OCREngine>
                      <ui:GetOCRText.Target>
                        <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[foundElt]" Id="e0ca2a0f-a23c-402d-893f-13d364855a77" InformativeScreenshot="ef9a200fc6d0966e88d385653b010ae1">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:GetOCRText.Target>
                      <ui:GetOCRText.Text>
                        <OutArgument x:TypeArguments="x:String">[PreviousSale]</OutArgument>
                      </ui:GetOCRText.Text>
                    </ui:GetOCRText>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="333.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[PreviousSale]" />
                  </Sequence>
                </Sequence>
                <If Condition="[PreviousSale.Contains(&quot;previous sale&quot;)]" sap:VirtualizedContainerService.HintSize="723.2,460" sap2010:WorkflowViewState.IdRef="If_1">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="375.2,310.4" sap2010:WorkflowViewState.IdRef="Sequence_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Enter" sap:VirtualizedContainerService.HintSize="333.6,117.6" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="enter" KeyModifiers="None" SpecialKey="True">
                        <ui:SendHotkey.Target>
                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="46d1e2f2-17b1-4d21-8904-77e708b8d45b" Selector="&lt;wnd app='vncviewer.exe' cls='vwr::CDesktopWin' omit:title='10.89.160.21 (sterling@reg1) - VNC Viewer' /&gt;">
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:SendHotkey.Target>
                      </ui:SendHotkey>
                      <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[TotalAdjusted]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,215.2" sap2010:WorkflowViewState.IdRef="Sequence_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[TotalAdjusted]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Throw Exception="[new Exception(&quot;Total adjustment message is not shown&quot;)]" sap:VirtualizedContainerService.HintSize="262.4,22.4" sap2010:WorkflowViewState.IdRef="Throw_1" />
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </ActivityAction>
          </ui:WindowScope.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:WindowScope>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,313.6" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="375.2,243.2" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GotoPOSHome workflow" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="GotoPOSHome.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <scg:Dictionary x:TypeArguments="x:String, Argument" />
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <t:EndTest DisplayName="End test" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="EndTest_1" Orientation="Window" Status="FAILED" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <t:EndTest DisplayName="End test" sap:VirtualizedContainerService.HintSize="433.6,22.4" sap2010:WorkflowViewState.IdRef="EndTest_2" Orientation="Window" Status="PASSED" />
  </Sequence>
</Activity>